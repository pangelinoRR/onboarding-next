"use server";

import { signIn } from "@/auth";
import { AuthError } from "next-auth";
import { LoginFormType } from "../ui/login-form";
import { RegisterFormType } from "../ui/register-form";
import axios from "@/app/lib/axios";
import { ROUTES } from "@/constants/routes";
import { AxiosError } from "axios";

export async function authenticate(data: LoginFormType) {
  try {
    /**
     * Calls the signIn method generated by Next-Auth
     */
    await signIn("credentials", data);
  } catch (error) {
    /**
     * Login failed
     */
    if (error instanceof AuthError) {
      switch (error.type) {
        case "CredentialsSignin":
          throw new Error("Invalid credentials");
        default:
          throw new Error("Something went wrong");
      }
    }
  }
}

export async function register(data: RegisterFormType) {
  try {
    /**
     * Register the new user.
     */
    await axios.post(ROUTES.AUTH.REGISTER, data);

    /**
     * Calls the signIn method generated by Next-Auth
     */
    await signIn("credentials", { email: data.email, password: data.password });
  } catch (error) {
    /**
     * Login failed
     */
    if (error instanceof AuthError) {
      switch (error.type) {
        case "CredentialsSignin":
          throw new Error("Invalid credentials");
        default:
          throw new Error("Something went wrong");
      }
    } else if (error instanceof AxiosError) {
      throw new Error(error.response?.data?.message);
    }

    throw error;
  }
}
